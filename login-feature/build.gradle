apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'
android {
    compileSdkVersion rootProject.compileSdkVersion


    defaultConfig {
        minSdkVersion rootProject.minSdkVersion
        targetSdkVersion rootProject.targetSdkVersion
        versionCode rootProject.versionCode
        versionName rootProject.versionName

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles 'consumer-rules.pro'
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

}

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation "androidx.appcompat:appcompat:$rootProject.appcompatVersion"
    implementation "androidx.core:core-ktx:$rootProject.ktxVersion"
    implementation "androidx.constraintlayout:constraintlayout:$rootProject.constraintlayoutVersion"
    testImplementation "junit:junit:$rootProject.junitVersion"
    androidTestImplementation 'androidx.test.ext:junit:1.1.1'
    androidTestImplementation "androidx.test.espresso:espresso-core:$rootProject.expresso_core"
    implementation "com.google.android.material:material:$rootProject.material_version"

    //Rx
    implementation "io.reactivex.rxjava2:rxjava:$rootProject.rx_version"
    implementation "io.reactivex.rxjava2:rxandroid:$rootProject.rx_android_version"
    implementation "androidx.room:room-rxjava2:$rootProject.room_version"

    //dagger
    implementation "com.google.dagger:dagger:$rootProject.dagger_version"
    implementation "com.google.dagger:dagger-android:$rootProject.dagger_version"
    implementation "com.google.dagger:dagger-android-support:$rootProject.dagger_version"
    kapt "com.google.dagger:dagger-compiler:$rootProject.dagger_version"
    kapt "com.google.dagger:dagger-android-processor:$rootProject.dagger_version"
    implementation project(path: ':common-module')
    implementation project(path: ':presentation')
    implementation project(path: ':remote-source')
}
